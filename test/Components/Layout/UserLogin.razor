@page "/userlogin"
@using test.Components.Data
@using test.Components.Services
@inject UserService UserService

<h3>UserLogin</h3>

<div class="form-group">
    <label for="email">Email:</label>
    <input type="email" id="email" class="form-control" @bind="loginRequest.Email" />
</div>

<div class="form-group">
    <label for="password">Password:</label>
    <input type="password" id="password" class="form-control" @bind="loginRequest.Password" />
</div>

<button class="btn btn-primary" @onclick="SubmitLogin">Login</button>

@if (!string.IsNullOrEmpty(debugMessage))
{
    <p class="text-muted">@debugMessage</p>
}

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private string debugMessage;

    private async Task SubmitLogin()
    {
        debugMessage = "Logging in...";
        Console.WriteLine("Login attempt started.");

        try
        {
            
            var token = await UserService.LoginAsync(loginRequest);

            if (!string.IsNullOrEmpty(token))
            {
                debugMessage = "Login successful!";
                Console.WriteLine("Login successful. Token received: " + token);

                
                await LocalStorageService.SetItemAsync("authToken", token);
            }
            else
            {
                debugMessage = "Login failed: Token not received.";
                Console.WriteLine("Login failed: No token received.");
            }
        }
        catch (Exception ex)
        {
            debugMessage = $"Error: {ex.Message}";
            Console.WriteLine($"Error during login: {ex.Message}");
        }
    }

    
}